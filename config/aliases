#!/bin/sh

# Shorthands ###################################################################
alias sudo='sudo '

alias z='zathura'
alias v='nvim'
alias sv='sudo -E -s nvim'

alias startb='startx /usr/bin/bspwm'

alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

alias rb='source ~/.zshrc'
alias rgpg='gpg-connect-agent reloadagent /bye'

alias sshs='eval `ssh-agent` && ssh-add'
alias sshq='kill $SSH_AGENT_PID'

alias mv='mv -i'

function copy() { xclip -sel c < "$1"; }
function paste() { xclip -o > "$1"; }

# AU vpn
CISCO='/opt/cisco/anyconnect/bin/vpn'
alias auconnect='$CISCO -s connect remote.au.dk/AU-ACCESS'
alias audisconnect='$CISCO -s disconnect remote.au.dk/AU-ACCESS'
alias ciscostate='$CISCO state'
function ciscovpn() { $CISCO "$@"; }

# List files and stuff #########################################################
alias ls='exa --color=always --group-directories-first'
alias la='exa -a --color=always --group-directories-first'
alias l='exa -alF --color=always --group-directories-first'
alias l.='exa -a | egrep "^\."'
function lt() {
    level=""
    if [ ! -z "$1" ]; then
        level="-L $1"
    fi
    exa -aT $level --color=always --group-directories-first $2
}
function lds() { du -h --max-depth=1 $@ }

function clf() {
    find $1 -type f -exec wc -l {} \; | awk '{total += $1} END{print "Number of lines in directory:", total}'
}

# Terminal movement ############################################################
alias ..='cd ..'
alias ~='cd ~'
function cdn() { mkdir -p -- "$1" && cd -P -- "$1"; }
function cdr() { echo "make function that cd's to git root"; }
function cdb() { echo "make function that cd's back to previous"; }

# Git aliases ##################################################################
alias g='git'
alias gs='git status'

alias gcl='git clone'

alias gc='git commit -v'
alias gca='git commit -v --all'
alias gcm='git commit -v -m'
alias gcam='git commit -v --all -m'

alias gp='git push'
alias gpu='git push -u'

alias gl='git pull'
alias glr'git pull --rebase'

alias ga='git add'
alias gaa='git add --all'
alias gau='git add --update'

alias gb='git branch'
alias gbl='git branch --list'
alias gbd='git branch --delete'
alias gbr='git branch --remote'

alias gwl='git worktree list'
alias gwa='git worktree add'
alias gwr='git worktree remove'
alias gwrf!='git worktree remove --force'

alias gco='git checkout'
alias gcb='git checkout -b'
alias gcH!='git checkout HEAD --'

alias gd='git diff'
alias gdw='git diff --word-diff'

alias gf='git fetch'
alias gfo='git fetch origin'

alias gm='git merge'

alias gr='git reset'
alias grh!='git reset --hard'

alias grb='git rebase'
alias grba='git rebase --abort'
alias grbc='git rebase --continue'

alias grm='git rm'

alias go='git remote'
alias goa='git remote add'
alias gor='git remote rm'

# Git stuff for mr #############################################################
function ci() { mr -d $HOME -n 2 record }
function st() { mr -d $HOME -i -n 2 -j6 status }
function add() { mr -d $HOME -n 2 -j6 run command git add --all }

function fetch() {
    eval `ssh-agent` && ssh-add
    mr -d $HOME -i -n 2 -j6 fetch
    kill $SSH_AGENT_PID
}

function pull() {
    eval `ssh-agent` && ssh-add
    mr -d $HOME -i -n 2 -j6 update
    kill $SSH_AGENT_PID
}

function push() {
    eval `ssh-agent` && ssh-add
    mr -d $HOME -i -n 2 -j6 push
    kill $SSH_AGENT_PID
}

# Templates ####################################################################
function mktex() {
    if [[ $# = 0 ]]; then
        echo "Enter name of project"
    else
        mkdir $1
        cp "$HOME/dotfiles/templates/latex.tex" "$1/main.tex"
    fi
}

function mkslides() {
    if [[ $# = 0 ]]; then
        echo "Enter name of project"
    else
        mkdir $1
        cp "$HOME/dotfiles/templates/slides.tex" "$1/main.tex"
    fi
}

# Convenient commands ##########################################################
function mvr() {
    unset -v latest
    for file in ~/Downloads/*; do
        # latest=$file
        [[ $file -nt $latest ]] && latest=$file
    done
    mv -i "$latest" $([[ "${1##*/}" == *.* ]] \
        && echo "$1" || echo "$1.${latest##*.}")
}

function rmsp() { for f in "$@"; do mv "$f" "${f// /_}"; done }

function pac() {
    PACS=$(pacman -Ssq | fzf -m --preview="pacman -Si {}")
    (($?)) || xargs -a <(echo $PACS) sudo pacman -Syy
}

function pacr() {
    PACS=$(pacman -Ssq | fzf -m --preview="pacman -Qi {}")
    (($?)) || xargs -a <(echo $PACS) sudo pacman -R
}
 
function ex () {
  if [ -f "$1" ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1   ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *.deb)       ar x $1      ;;
      *.tar.xz)    tar xf $1    ;;
      *.tar.zst)   unzstd $1    ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}
