# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
unsetopt beep
bindkey -e
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/home/malte/.zshrc'

setopt HIST_IGNORE_ALL_DUPS
#setopt APPEND_HISTORY
#setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY

autoload -Uz compinit
compinit
# End of lines added by compinstall

setopt NULL_GLOB
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'

autoload -U promptinit && promptinit
setopt prompt_subst

# Enabling and setting git info var to be used in prompt config.
autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git svn
# This line obtains information from the vcs.
zstyle ':vcs_info:git*' formats " (%b)"
precmd() {
    vcs_info
}

directory_name() {
    PROMPT_PATH=""
    if [[ -d $(git rev-parse --show-toplevel 2>/dev/null) ]]; then
        # We're in a git repo.
        BASE=$(basename $(git rev-parse --show-toplevel))
        if [[ $PWD = $(git rev-parse --show-toplevel) ]]; then
            # We're in the root.
            PROMPT_PATH="%F{127}${BASE}%f"
        else
            # We're not in the root. Display the git repo root.
            GIT_ROOT="%F{127}${BASE}%f"
            PATH_TO_CURRENT="%F{27}${PWD#$(git rev-parse --show-toplevel)}%f"
            PROMPT_PATH="${GIT_ROOT}${PATH_TO_CURRENT}"
        fi
    else
        PROMPT_PATH="%F{27}%~%f"
    fi

    echo "%B${PROMPT_PATH}%b"
}

PROMPT='$(directory_name)${vcs_info_msg_0_} %# '

. /usr/share/fzf/completion.zsh
. /usr/share/fzf/key-bindings.zsh
. $HOME/dotfiles/config/aliases

# BINDINGS #####################################################################
bindkey -s '^t' 'of -he\n'
alias tj='source tj'
bindkey -s '^w' 'source tj -he\n'

# MISC #########################################################################
# . "$HOME/.cargo/env"

bindkey '^[[1;5D' backward-word
bindkey '^[[1;5C' forward-word

# create a zkbd compatible hash;
# to add other keys to this hash, see: man 5 terminfo
typeset -g -A key

key[Home]="${terminfo[khome]}"
key[End]="${terminfo[kend]}"
key[Insert]="${terminfo[kich1]}"
key[Backspace]="${terminfo[kbs]}"
key[Delete]="${terminfo[kdch1]}"
key[Up]="${terminfo[kcuu1]}"
key[Down]="${terminfo[kcud1]}"
key[Left]="${terminfo[kcub1]}"
key[Right]="${terminfo[kcuf1]}"
key[PageUp]="${terminfo[kpp]}"
key[PageDown]="${terminfo[knp]}"
key[Shift-Tab]="${terminfo[kcbt]}"

# setup key accordingly
[[ -n "${key[Home]}"      ]] && bindkey -- "${key[Home]}"       beginning-of-line
[[ -n "${key[End]}"       ]] && bindkey -- "${key[End]}"        end-of-line
[[ -n "${key[Insert]}"    ]] && bindkey -- "${key[Insert]}"     overwrite-mode
[[ -n "${key[Backspace]}" ]] && bindkey -- "${key[Backspace]}"  backward-delete-char
[[ -n "${key[Delete]}"    ]] && bindkey -- "${key[Delete]}"     delete-char
[[ -n "${key[Up]}"        ]] && bindkey -- "${key[Up]}"         up-line-or-history
[[ -n "${key[Down]}"      ]] && bindkey -- "${key[Down]}"       down-line-or-history
[[ -n "${key[Left]}"      ]] && bindkey -- "${key[Left]}"       backward-char
[[ -n "${key[Right]}"     ]] && bindkey -- "${key[Right]}"      forward-char
[[ -n "${key[PageUp]}"    ]] && bindkey -- "${key[PageUp]}"     beginning-of-buffer-or-history
[[ -n "${key[PageDown]}"  ]] && bindkey -- "${key[PageDown]}"   end-of-buffer-or-history
[[ -n "${key[Shift-Tab]}" ]] && bindkey -- "${key[Shift-Tab]}"  reverse-menu-complete

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} && ${+terminfo[rmkx]} )); then
	autoload -Uz add-zle-hook-widget
	function zle_application_mode_start { echoti smkx }
	function zle_application_mode_stop { echoti rmkx }
	add-zle-hook-widget -Uz zle-line-init zle_application_mode_start
	add-zle-hook-widget -Uz zle-line-finish zle_application_mode_stop
fi

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/malte/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/malte/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/home/malte/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/malte/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

