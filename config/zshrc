# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
unsetopt beep
bindkey -v
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/home/malte/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall

setopt NULL_GLOB
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'

autoload -U promptinit && promptinit
PS1="%B%F{27}%1~ %f%b%# "

. /usr/share/fzf/completion.zsh
. /usr/share/fzf/key-bindings.zsh

# ALIASES ######################################################################
alias g='git'
alias v='nvim'
alias sv='sudo -E nvim'
alias ls='exa --color=always --group-directories-first'
alias la='exa -a --color=always --group-directories-first'
alias l='exa -alF --color=always --group-directories-first'
alias l.='exa -a | egrep "^\."'
function lt() {
    level=""
    if [ ! -z "$1" ]; then
        level="-L $1"
    fi
    exa -aT $level --color=always --group-directories-first $2
}

alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

alias ..='cd ..'
alias ~='cd ~'
alias mv='mv -i'
function cdn() { mkdir -p -- "$1" && cd -P -- "$1"; }
alias rb='source ~/.zshrc'

alias sshs='eval `ssh-agent` && ssh-add'
alias sshq='kill $SSH_AGENT_PID'

# COMMANDS #####################################################################
function rmsp() { for f in "$@"; do mv "$f" "${f// /_}"; done }
function copy() { xclip -sel c < "$1"; }
function paste() { xclip -o > "$1"; }
function pac() {
    PACS=$(pacman -Ssq | fzf -m --preview="pacman -Si {}")
    (($?)) || sudo pacman -Syy $PACS
}

function mvr() {
    unset -v latest
    for file in ~/{Downloads,Pictures}/*; do
      [[ $file -nt $latest ]] && latest=$file
    done
    mv -i "$latest" $([[ "${1##*/}" == *.* ]] \
        && echo "$1" || echo "$1.${latest##*.}")
}
 
function ex () {
  if [ -f "$1" ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1   ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *.deb)       ar x $1      ;;
      *.tar.xz)    tar xf $1    ;;
      *.tar.zst)   unzstd $1    ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# AU vpn
CISCO='/opt/cisco/anyconnect/bin/vpn'
alias auconnect='$CISCO -s connect remote.au.dk/AU-ACCESS'
alias audisconnect='$CISCO -s disconnect remote.au.dk/AU-ACCESS'
alias ciscostate='$CISCO state'
function ciscovpn() { $CISCO "$@"; }

# BINDINGS #####################################################################
bindkey -s '^t' 'of -he\n'
alias godir='source godir'
bindkey -s '^w' 'source godir -hed\n'

# GIT STUFF ####################################################################
MRCMD="mr -d $HOME -i -n 2 -j6"
MRCMDS="mr -d $HOME -n 2"

function ci() { $MRCMDS record }
function st() { $MRCMD status }
function ci() { mr -d $HOME -n 2 record }
function st() { mr -d $HOME -i -n 2 -j6 status }

function fetch() {
    eval `ssh-agent` && ssh-add
    mr -d $HOME -i -n 2 -j6 fetch
    kill $SSH_AGENT_PID
}

function pull() {
    eval `ssh-agent` && ssh-add
    mr -d $HOME -i -n 2 -j6 update
    kill $SSH_AGENT_PID
}

function push() {
    eval `ssh-agent` && ssh-add
    mr -d $HOME -i -n 2 -j6 push
    kill $SSH_AGENT_PID
}

# TEMPLATES ####################################################################
function mktex() {
    if [[ $# = 0 ]]; then
        echo "Enter name of project"
    else
        mkdir $1
        cp "$HOME/dotfiles/templates/latex.tex" "$1/main.tex"
    fi
}

function mkslides() {
    if [[ $# = 0 ]]; then
        echo "Enter name of project"
    else
        mkdir $1
        cp "$HOME/dotfiles/templates/slides.tex" "$1/main.tex"
    fi
}

# MISC #########################################################################
. "$HOME/.cargo/env"
